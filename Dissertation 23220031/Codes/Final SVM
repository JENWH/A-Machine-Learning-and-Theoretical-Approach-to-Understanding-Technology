{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPAyxXP/Pb/uGd+RjS3Gcxo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Part 2: Support Vector Machine\n"," A. Load dataset\n","\n"," B. Text preprocessing and cleaning:\n","\n"," C. Train and intialise default SVM model, compare with and without stopwords with TFIDF.\n","\n"," D. Optimise the higher accuracy SVM model"],"metadata":{"id":"ktzIFmJMbwzX"}},{"cell_type":"code","source":["from google.colab import drive\n","import pandas as pd\n","\n","drive.mount('/content/drive')\n","\n","training_data = pd.read_csv('/content/drive/MyDrive/Dissertation-Coding part/datasets/Train.csv')\n","\n","#check training data\n","print(training_data.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W79flTum4o_3","executionInfo":{"status":"ok","timestamp":1724975188321,"user_tz":-60,"elapsed":2293,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"1a911aa0-0dc4-49cc-ca56-733d0e230c42"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","                                                Text  Label\n","0  \"Vision coverageVacation PayDisability insuran...      1\n","1  \"- 115 EUR per week. We guarantee you: • Work ...      1\n","2  \"language minimum proficiency level: • Diligen...      1\n","3  \"the shift); Overtime is paid up to 125% more....      1\n","4  \"be paid. The city is Munich. Immediate depart...      1\n"]}]},{"cell_type":"code","source":["training_data.info()"],"metadata":{"id":"r5mOBViBUya8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724975188321,"user_tz":-60,"elapsed":2,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"37e47289-44ad-4afb-b891-3044e6bcf2ea"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2000 entries, 0 to 1999\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   Text    2000 non-null   object\n"," 1   Label   2000 non-null   int64 \n","dtypes: int64(1), object(1)\n","memory usage: 31.4+ KB\n"]}]},{"cell_type":"markdown","source":["# B. Text preprocessing and cleaning:\n","- Define normalsied_text funtion:\n","- normalsied text (lowercase)\n","- remove numbers\n","- remove special characters and punctuation\n","- Tokenise text\n","- Stemming\n","- Lemmitisation\n"],"metadata":{"id":"998_Dup8cDoK"}},{"cell_type":"code","source":["#install to use module\n","!pip install contractions\n","\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics import accuracy_score\n","import unicodedata\n","import nltk\n","import string\n","import contractions\n","\n","#[1]\n","nltk.download('punkt')\n","\n","# Build a text cleaning function\n","def clean_text(raw_text):\n","    # Convert UTF characters to a simple ASCII format\n","    def change_utf(text):\n","        #2\n","        #3\n","        text = unicodedata.normalize('NFKD', text)\n","        #to ASCII, ignore none ascii format\n","        text = text.encode('ascii', 'ignore').decode('ascii')\n","        return text\n","\n","    #specify the text will change format to ascii for the next text cleanning step\n","    UTF_text = change_utf(raw_text)\n","\n","\n","    #Lower case\n","    normalised_text = UTF_text.lower()\n","\n","    #Tokenization\n","    words = nltk.word_tokenize(normalised_text)\n","\n","    #Remove punctuations & expand contractions\n","    words = [contractions.fix(word) for word in words if word not in string.punctuation]\n","\n","    #Remove numbers and specific symbols\n","    words = [word for word in words if not word.isdigit() and word not in ['---', '...', '***', '``']]\n","\n","    return words\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MwkmAC8BwjqH","executionInfo":{"status":"ok","timestamp":1724975198691,"user_tz":-60,"elapsed":10372,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"0e75f352-4915-4aa0-f3a6-ccd501c98e51"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: contractions in /usr/local/lib/python3.10/dist-packages (0.1.73)\n","Requirement already satisfied: textsearch>=0.0.21 in /usr/local/lib/python3.10/dist-packages (from contractions) (0.0.24)\n","Requirement already satisfied: anyascii in /usr/local/lib/python3.10/dist-packages (from textsearch>=0.0.21->contractions) (0.3.2)\n","Requirement already satisfied: pyahocorasick in /usr/local/lib/python3.10/dist-packages (from textsearch>=0.0.21->contractions) (2.1.0)\n"]},{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]}]},{"cell_type":"code","source":["training_data['cleaned_text_train'] = training_data['Text'].apply(clean_text)\n","\n","#check\n","print(training_data['cleaned_text_train'].head())\n"],"metadata":{"id":"tBbjY8QswtzU","executionInfo":{"status":"ok","timestamp":1724975213955,"user_tz":-60,"elapsed":15266,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"61a4c4d9-8d49-4203-f55a-0b2d036962bd"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["0    [vision, coveragevacation, paydisability, insu...\n","1    [eur, per, week, we, guarantee, you, work, in,...\n","2    [language, minimum, proficiency, level, dilige...\n","3    [the, shift, overtime, is, paid, up, to, more,...\n","4    [be, paid, the, city, is, munich, immediate, d...\n","Name: cleaned_text_train, dtype: object\n"]}]},{"cell_type":"code","source":["#Create a new DataFrame with only the cleaned text and labels, prepare for model training\n","cleaned_train_data = training_data[['cleaned_text_train', 'Label']]\n"],"metadata":{"id":"xLWyfvz_AXG_","executionInfo":{"status":"ok","timestamp":1724975213955,"user_tz":-60,"elapsed":22,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# SVM\n","- remove stopwords & TFIDF\n"],"metadata":{"id":"2MgtynOA-3WC"}},{"cell_type":"code","source":["#importing libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sb\n","from nltk.tokenize import word_tokenize\n","from nltk import pos_tag\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer\n","from sklearn.preprocessing import LabelEncoder\n","from collections import defaultdict\n","from nltk.corpus import wordnet as wn\n","from sklearn.pipeline import Pipeline\n","from sklearn.feature_extraction.text import TfidfVectorizer, TfidfTransformer\n","from sklearn import model_selection, naive_bayes, svm\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_curve, auc, precision_recall_curve\n","from sklearn.model_selection import train_test_split, RandomizedSearchCV, GridSearchCV\n","import re"],"metadata":{"id":"i8-YNgqLWDKT","executionInfo":{"status":"ok","timestamp":1724975214196,"user_tz":-60,"elapsed":262,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["# Tuning Hyperparameter:[4]\n","ref: https://stackabuse.com/understanding-svm-hyperparameters/\n","- **The C Hyperparameter:**\n","The C parameter is inversely proportional to the margin size, this means that the larger the value of C, the smaller the margin, and, conversely, the smaller the value of C, the larger the margin.\n","\n","The C parameter can be used along with any kernel, it tells the algorithm how much to avoid misclassifying each training sample, due to that, it is also known as regularization. Our linear kernel SVM has used a C of 1.0, which is a large value and gives a smaller margin.\n","\n","- **The Gamma Hyperparameter**\n","It is inversely proportional to its distance. The higher its value, the closest are the points that are considered for the decision boundary, and the lowest the gamma, the farther points are also considered for choosing the decision boundary.\n","\n","\n","\n"],"metadata":{"id":"aaGgItVd_OGC"}},{"cell_type":"markdown","source":["ref: [5][6]\n","1. https://www.geeksforgeeks.org/svm-hyperparameter-tuning-using-gridsearchcv-ml/\n","2. https://www.kaggle.com/code/prashant111/svm-classifier-tutorial"],"metadata":{"id":"o0lxQ_qSCKdS"}},{"cell_type":"markdown","source":[" C/ Gamma/ Kernal:[7]\n"," ref: https://aqsa-qadir44.medium.com/tuning-parameters-of-svm-kernel-regularization-gamma-and-margin-5f2f6639121a\n"," ref: https://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html\n","\n"," - C: Influence Bias & Variance\n"," - Gamma:the inverse of the radius of influence of samples selected by the model as support vectors.\n","\n","\n"," - Kernal: The Kernal Trick- can help solve non-linear problem. (Flexibility, higher Accuracy and computational effciency, achive better result\n","[8]\n","1. Try rbf: Radical bias function: good for low dimension, dense data, where the SVM algorithm’s accuracy and performance may be enhanced by include additional features.\n","ref: https://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html\n","\n","  "],"metadata":{"id":"ukxbRnfIOyht"}},{"cell_type":"code","source":["from sklearn.svm import SVC\n","\n","#Start the SVM model\n","svc = SVC()\n","\n","#show the default parameters\n","print(\"Default parameters of SVC:\")\n","print(svc.get_params())\n"],"metadata":{"id":"--6cFHIOnWAv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1724975214196,"user_tz":-60,"elapsed":5,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"32f5b0e8-1525-4b12-f56c-a1aa3743c2ab"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Default parameters of SVC:\n","{'C': 1.0, 'break_ties': False, 'cache_size': 200, 'class_weight': None, 'coef0': 0.0, 'decision_function_shape': 'ovr', 'degree': 3, 'gamma': 'scale', 'kernel': 'rbf', 'max_iter': -1, 'probability': False, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'verbose': False}\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split as split\n","from sklearn.svm import SVC\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n","from sklearn.model_selection import GridSearchCV\n","\n","#Split the training data into train/test:\n","#Week10: theory and application\n","class Dataset:\n","    def __init__(self):\n","        self.X = None\n","        self.y = None\n","        self.V = None\n","\n","#specify column\n","cleaned_train_data.columns = ['cleaned_text_train', 'Label']\n","\n","#Convert textual columns to strings for TF-IDF vectorization\n","cleaned_train_data['cleaned_text_train'] = cleaned_train_data['cleaned_text_train'].astype(str)\n","\n","# Prepare text and labels\n","X = cleaned_train_data['cleaned_text_train'].values  # Input text features\n","y = cleaned_train_data['Label'].values  # Corresponding labels\n","\n","# Initialize train and test Dataset objects\n","train = Dataset()\n","test = Dataset()\n","\n","#Splitting the data into training and testing sets(has tried combinations 0.2/0.3/0.4/0.5/0.6/0.7/0.8/0.9= did not change accuracies of training) will keep 0.2 here\n","train.X, test.X, train.y, test.y = split(X, y, test_size=0.20, random_state=123456789)\n","\n","#Remove stop words&TFIDF  (here i specify> stop_words='english')\n","vectorizer_no_sw = TfidfVectorizer(stop_words='english')\n","\n","#Vectorize the textual data(both train/test)\n","train.V = vectorizer_no_sw.fit_transform(train.X)\n","test.V = vectorizer_no_sw.transform(test.X)\n","\n","#Define the parameters to search and their possible values: fix the combination issues (L1&lbfgs)\n","param_grid = {\n","    'C': [0.1, 1, 10, 100, 1000],\n","    'gamma': [1, 0.1, 0.01, 0.001, 0.0001],\n","    'kernel': ['rbf', 'linear', 'poly', 'sigmoid'],\n","}\n","\n","#Initialize the SVM model # use GridSearchCV find the best parameters\n","grid = GridSearchCV(SVC(), param_grid, refit=True, verbose=3)\n","\n","#Fit the model on prepared training data\n","grid.fit(train.V, train.y)\n","\n","#best svm model\n","svc_best_no_sw = grid.best_estimator_\n","#[9]\n","#predict on test data(from the split) to see performance\n","y_pred_no_sw = svc_best_no_sw.predict(test.V)\n","\n","#test accuracy from the best SVM model\n","print(\"Best Model test accuracy:\", accuracy_score(test.y, y_pred_no_sw))\n","\n","#classification report and confusion matrix\n","print(classification_report(test.y, y_pred_no_sw))\n","print(confusion_matrix(test.y, y_pred_no_sw))\n"],"metadata":{"id":"xEmLBfDk_tVQ","executionInfo":{"status":"ok","timestamp":1724975752723,"user_tz":-60,"elapsed":538530,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c2427dbc-f3cd-4582-a037-88d20cb87a92"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-8-91eb8b5c6cf8>:19: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  cleaned_train_data['cleaned_text_train'] = cleaned_train_data['cleaned_text_train'].astype(str)\n"]},{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 100 candidates, totalling 500 fits\n","[CV 1/5] END ........C=0.1, gamma=1, kernel=rbf;, score=1.000 total time=   1.1s\n","[CV 2/5] END ........C=0.1, gamma=1, kernel=rbf;, score=1.000 total time=   1.2s\n","[CV 3/5] END ........C=0.1, gamma=1, kernel=rbf;, score=1.000 total time=   1.2s\n","[CV 4/5] END ........C=0.1, gamma=1, kernel=rbf;, score=1.000 total time=   1.3s\n","[CV 5/5] END ........C=0.1, gamma=1, kernel=rbf;, score=1.000 total time=   1.3s\n","[CV 1/5] END .....C=0.1, gamma=1, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 2/5] END .....C=0.1, gamma=1, kernel=linear;, score=1.000 total time=   1.3s\n","[CV 3/5] END .....C=0.1, gamma=1, kernel=linear;, score=1.000 total time=   1.7s\n","[CV 4/5] END .....C=0.1, gamma=1, kernel=linear;, score=1.000 total time=   1.5s\n","[CV 5/5] END .....C=0.1, gamma=1, kernel=linear;, score=1.000 total time=   1.2s\n","[CV 1/5] END .......C=0.1, gamma=1, kernel=poly;, score=1.000 total time=   1.9s\n","[CV 2/5] END .......C=0.1, gamma=1, kernel=poly;, score=1.000 total time=   1.6s\n","[CV 3/5] END .......C=0.1, gamma=1, kernel=poly;, score=1.000 total time=   1.6s\n","[CV 4/5] END .......C=0.1, gamma=1, kernel=poly;, score=1.000 total time=   1.8s\n","[CV 5/5] END .......C=0.1, gamma=1, kernel=poly;, score=1.000 total time=   1.8s\n","[CV 1/5] END ....C=0.1, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.9s\n","[CV 2/5] END ....C=0.1, gamma=1, kernel=sigmoid;, score=1.000 total time=   1.4s\n","[CV 3/5] END ....C=0.1, gamma=1, kernel=sigmoid;, score=1.000 total time=   1.9s\n","[CV 4/5] END ....C=0.1, gamma=1, kernel=sigmoid;, score=1.000 total time=   1.7s\n","[CV 5/5] END ....C=0.1, gamma=1, kernel=sigmoid;, score=1.000 total time=   1.8s\n","[CV 1/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=1.000 total time=   2.9s\n","[CV 2/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=1.000 total time=   2.8s\n","[CV 3/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=1.000 total time=   2.2s\n","[CV 4/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=1.000 total time=   1.6s\n","[CV 5/5] END ......C=0.1, gamma=0.1, kernel=rbf;, score=1.000 total time=   1.8s\n","[CV 1/5] END ...C=0.1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 2/5] END ...C=0.1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 3/5] END ...C=0.1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 4/5] END ...C=0.1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 5/5] END ...C=0.1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 1/5] END .....C=0.1, gamma=0.1, kernel=poly;, score=0.503 total time=   2.1s\n","[CV 2/5] END .....C=0.1, gamma=0.1, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END .....C=0.1, gamma=0.1, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END .....C=0.1, gamma=0.1, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END .....C=0.1, gamma=0.1, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END ..C=0.1, gamma=0.1, kernel=sigmoid;, score=0.984 total time=   1.9s\n","[CV 2/5] END ..C=0.1, gamma=0.1, kernel=sigmoid;, score=0.966 total time=   2.2s\n","[CV 3/5] END ..C=0.1, gamma=0.1, kernel=sigmoid;, score=0.928 total time=   2.3s\n","[CV 4/5] END ..C=0.1, gamma=0.1, kernel=sigmoid;, score=0.963 total time=   2.0s\n","[CV 5/5] END ..C=0.1, gamma=0.1, kernel=sigmoid;, score=0.941 total time=   3.1s\n","[CV 1/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.503 total time=   2.3s\n","[CV 2/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 3/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.503 total time=   2.1s\n","[CV 4/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.503 total time=   2.4s\n","[CV 5/5] END .....C=0.1, gamma=0.01, kernel=rbf;, score=0.506 total time=   2.2s\n","[CV 1/5] END ..C=0.1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 2/5] END ..C=0.1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 3/5] END ..C=0.1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 4/5] END ..C=0.1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 5/5] END ..C=0.1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 1/5] END ....C=0.1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END ....C=0.1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ....C=0.1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END ....C=0.1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.9s\n","[CV 5/5] END ....C=0.1, gamma=0.01, kernel=poly;, score=0.506 total time=   2.2s\n","[CV 1/5] END .C=0.1, gamma=0.01, kernel=sigmoid;, score=0.503 total time=   2.3s\n","[CV 2/5] END .C=0.1, gamma=0.01, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 3/5] END .C=0.1, gamma=0.01, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 4/5] END .C=0.1, gamma=0.01, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 5/5] END .C=0.1, gamma=0.01, kernel=sigmoid;, score=0.506 total time=   1.9s\n","[CV 1/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 2/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.503 total time=   2.2s\n","[CV 3/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.503 total time=   2.4s\n","[CV 4/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.503 total time=   2.1s\n","[CV 5/5] END ....C=0.1, gamma=0.001, kernel=rbf;, score=0.506 total time=   1.9s\n","[CV 1/5] END .C=0.1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 2/5] END .C=0.1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 3/5] END .C=0.1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 4/5] END .C=0.1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 5/5] END .C=0.1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 1/5] END ...C=0.1, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END ...C=0.1, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ...C=0.1, gamma=0.001, kernel=poly;, score=0.503 total time=   2.0s\n","[CV 4/5] END ...C=0.1, gamma=0.001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 5/5] END ...C=0.1, gamma=0.001, kernel=poly;, score=0.506 total time=   4.3s\n","[CV 1/5] END C=0.1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 2/5] END C=0.1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 3/5] END C=0.1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 4/5] END C=0.1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 5/5] END C=0.1, gamma=0.001, kernel=sigmoid;, score=0.506 total time=   2.2s\n","[CV 1/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   2.4s\n","[CV 2/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   2.0s\n","[CV 3/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 4/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 5/5] END ...C=0.1, gamma=0.0001, kernel=rbf;, score=0.506 total time=   1.9s\n","[CV 1/5] END C=0.1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 2/5] END C=0.1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 3/5] END C=0.1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 4/5] END C=0.1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 5/5] END C=0.1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 1/5] END ..C=0.1, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.1s\n","[CV 2/5] END ..C=0.1, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 3/5] END ..C=0.1, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.1s\n","[CV 4/5] END ..C=0.1, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ..C=0.1, gamma=0.0001, kernel=poly;, score=0.506 total time=   2.3s\n","[CV 1/5] END C=0.1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.1s\n","[CV 2/5] END C=0.1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.0s\n","[CV 3/5] END C=0.1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.7s\n","[CV 4/5] END C=0.1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   3.1s\n","[CV 5/5] END C=0.1, gamma=0.0001, kernel=sigmoid;, score=0.506 total time=   2.1s\n","[CV 1/5] END ..........C=1, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 2/5] END ..........C=1, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 3/5] END ..........C=1, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 4/5] END ..........C=1, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 5/5] END ..........C=1, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 1/5] END .......C=1, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END .......C=1, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END .......C=1, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END .......C=1, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END .......C=1, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END .........C=1, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 2/5] END .........C=1, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 3/5] END .........C=1, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 4/5] END .........C=1, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 5/5] END .........C=1, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 1/5] END ......C=1, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 2/5] END ......C=1, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 3/5] END ......C=1, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 4/5] END ......C=1, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 5/5] END ......C=1, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 1/5] END ........C=1, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 2/5] END ........C=1, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 3/5] END ........C=1, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 4/5] END ........C=1, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 5/5] END ........C=1, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 1/5] END .....C=1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END .....C=1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END .....C=1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END .....C=1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END .....C=1, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END .......C=1, gamma=0.1, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 2/5] END .......C=1, gamma=0.1, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 3/5] END .......C=1, gamma=0.1, kernel=poly;, score=0.503 total time=   2.0s\n","[CV 4/5] END .......C=1, gamma=0.1, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END .......C=1, gamma=0.1, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END ....C=1, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 2/5] END ....C=1, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 3/5] END ....C=1, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 4/5] END ....C=1, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 5/5] END ....C=1, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 1/5] END .......C=1, gamma=0.01, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 2/5] END .......C=1, gamma=0.01, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 3/5] END .......C=1, gamma=0.01, kernel=rbf;, score=1.000 total time=   1.9s\n","[CV 4/5] END .......C=1, gamma=0.01, kernel=rbf;, score=1.000 total time=   1.9s\n","[CV 5/5] END .......C=1, gamma=0.01, kernel=rbf;, score=1.000 total time=   1.7s\n","[CV 1/5] END ....C=1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ....C=1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ....C=1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ....C=1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ....C=1, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ......C=1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END ......C=1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ......C=1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END ......C=1, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ......C=1, gamma=0.01, kernel=poly;, score=0.506 total time=   2.0s\n","[CV 1/5] END ...C=1, gamma=0.01, kernel=sigmoid;, score=0.984 total time=   2.3s\n","[CV 2/5] END ...C=1, gamma=0.01, kernel=sigmoid;, score=0.966 total time=   2.2s\n","[CV 3/5] END ...C=1, gamma=0.01, kernel=sigmoid;, score=0.928 total time=   1.8s\n","[CV 4/5] END ...C=1, gamma=0.01, kernel=sigmoid;, score=0.963 total time=   1.8s\n","[CV 5/5] END ...C=1, gamma=0.01, kernel=sigmoid;, score=0.941 total time=   2.0s\n","[CV 1/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.503 total time=   3.1s\n","[CV 2/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.503 total time=   4.6s\n","[CV 3/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.503 total time=   5.9s\n","[CV 4/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.503 total time=   4.3s\n","[CV 5/5] END ......C=1, gamma=0.001, kernel=rbf;, score=0.506 total time=   4.0s\n","[CV 1/5] END ...C=1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.7s\n","[CV 2/5] END ...C=1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 3/5] END ...C=1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 4/5] END ...C=1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 5/5] END ...C=1, gamma=0.001, kernel=linear;, score=1.000 total time=   0.7s\n","[CV 1/5] END .....C=1, gamma=0.001, kernel=poly;, score=0.503 total time=   4.0s\n","[CV 2/5] END .....C=1, gamma=0.001, kernel=poly;, score=0.503 total time=   3.0s\n","[CV 3/5] END .....C=1, gamma=0.001, kernel=poly;, score=0.503 total time=   2.9s\n","[CV 4/5] END .....C=1, gamma=0.001, kernel=poly;, score=0.503 total time=   4.9s\n","[CV 5/5] END .....C=1, gamma=0.001, kernel=poly;, score=0.506 total time=   4.4s\n","[CV 1/5] END ..C=1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 2/5] END ..C=1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 3/5] END ..C=1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 4/5] END ..C=1, gamma=0.001, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 5/5] END ..C=1, gamma=0.001, kernel=sigmoid;, score=0.506 total time=   2.3s\n","[CV 1/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   2.4s\n","[CV 2/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 3/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 4/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 5/5] END .....C=1, gamma=0.0001, kernel=rbf;, score=0.506 total time=   1.9s\n","[CV 1/5] END ..C=1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ..C=1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ..C=1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ..C=1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ..C=1, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ....C=1, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.9s\n","[CV 2/5] END ....C=1, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 3/5] END ....C=1, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 4/5] END ....C=1, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ....C=1, gamma=0.0001, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END .C=1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   1.9s\n","[CV 2/5] END .C=1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 3/5] END .C=1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 4/5] END .C=1, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.1s\n","[CV 5/5] END .C=1, gamma=0.0001, kernel=sigmoid;, score=0.506 total time=   2.3s\n","[CV 1/5] END .........C=10, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 2/5] END .........C=10, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 3/5] END .........C=10, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 4/5] END .........C=10, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 5/5] END .........C=10, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 1/5] END ......C=10, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ......C=10, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ......C=10, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ......C=10, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ......C=10, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ........C=10, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 2/5] END ........C=10, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 3/5] END ........C=10, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 4/5] END ........C=10, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 5/5] END ........C=10, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 1/5] END .....C=10, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 2/5] END .....C=10, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 3/5] END .....C=10, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 4/5] END .....C=10, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 5/5] END .....C=10, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 1/5] END .......C=10, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 2/5] END .......C=10, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 3/5] END .......C=10, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 4/5] END .......C=10, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 5/5] END .......C=10, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 1/5] END ....C=10, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ....C=10, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ....C=10, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ....C=10, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ....C=10, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ......C=10, gamma=0.1, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END ......C=10, gamma=0.1, kernel=poly;, score=0.503 total time=   2.0s\n","[CV 3/5] END ......C=10, gamma=0.1, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 4/5] END ......C=10, gamma=0.1, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 5/5] END ......C=10, gamma=0.1, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END ...C=10, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 2/5] END ...C=10, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 3/5] END ...C=10, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 4/5] END ...C=10, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 5/5] END ...C=10, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 1/5] END ......C=10, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 2/5] END ......C=10, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 3/5] END ......C=10, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 4/5] END ......C=10, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 5/5] END ......C=10, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 1/5] END ...C=10, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ...C=10, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ...C=10, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ...C=10, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ...C=10, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END .....C=10, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END .....C=10, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END .....C=10, gamma=0.01, kernel=poly;, score=0.503 total time=   2.1s\n","[CV 4/5] END .....C=10, gamma=0.01, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 5/5] END .....C=10, gamma=0.01, kernel=poly;, score=0.506 total time=   2.1s\n","[CV 1/5] END ..C=10, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 2/5] END ..C=10, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 3/5] END ..C=10, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 4/5] END ..C=10, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 5/5] END ..C=10, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 1/5] END .....C=10, gamma=0.001, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 2/5] END .....C=10, gamma=0.001, kernel=rbf;, score=1.000 total time=   1.9s\n","[CV 3/5] END .....C=10, gamma=0.001, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 4/5] END .....C=10, gamma=0.001, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 5/5] END .....C=10, gamma=0.001, kernel=rbf;, score=1.000 total time=   1.7s\n","[CV 1/5] END ..C=10, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ..C=10, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ..C=10, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ..C=10, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ..C=10, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ....C=10, gamma=0.001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 2/5] END ....C=10, gamma=0.001, kernel=poly;, score=0.503 total time=   1.9s\n","[CV 3/5] END ....C=10, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END ....C=10, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ....C=10, gamma=0.001, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END .C=10, gamma=0.001, kernel=sigmoid;, score=0.984 total time=   1.8s\n","[CV 2/5] END .C=10, gamma=0.001, kernel=sigmoid;, score=0.966 total time=   2.0s\n","[CV 3/5] END .C=10, gamma=0.001, kernel=sigmoid;, score=0.928 total time=   2.2s\n","[CV 4/5] END .C=10, gamma=0.001, kernel=sigmoid;, score=0.963 total time=   2.2s\n","[CV 5/5] END .C=10, gamma=0.001, kernel=sigmoid;, score=0.941 total time=   1.8s\n","[CV 1/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 2/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 3/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 4/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.503 total time=   1.9s\n","[CV 5/5] END ....C=10, gamma=0.0001, kernel=rbf;, score=0.506 total time=   2.3s\n","[CV 1/5] END .C=10, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END .C=10, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END .C=10, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 4/5] END .C=10, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END .C=10, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ...C=10, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 2/5] END ...C=10, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ...C=10, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END ...C=10, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ...C=10, gamma=0.0001, kernel=poly;, score=0.506 total time=   1.9s\n","[CV 1/5] END C=10, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   1.8s\n","[CV 2/5] END C=10, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.2s\n","[CV 3/5] END C=10, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.4s\n","[CV 4/5] END C=10, gamma=0.0001, kernel=sigmoid;, score=0.503 total time=   2.5s\n","[CV 5/5] END C=10, gamma=0.0001, kernel=sigmoid;, score=0.506 total time=   2.3s\n","[CV 1/5] END ........C=100, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 2/5] END ........C=100, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 3/5] END ........C=100, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 4/5] END ........C=100, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 5/5] END ........C=100, gamma=1, kernel=rbf;, score=1.000 total time=   0.6s\n","[CV 1/5] END .....C=100, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END .....C=100, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END .....C=100, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END .....C=100, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END .....C=100, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END .......C=100, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 2/5] END .......C=100, gamma=1, kernel=poly;, score=1.000 total time=   0.9s\n","[CV 3/5] END .......C=100, gamma=1, kernel=poly;, score=1.000 total time=   0.9s\n","[CV 4/5] END .......C=100, gamma=1, kernel=poly;, score=1.000 total time=   1.0s\n","[CV 5/5] END .......C=100, gamma=1, kernel=poly;, score=1.000 total time=   1.1s\n","[CV 1/5] END ....C=100, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.4s\n","[CV 2/5] END ....C=100, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.6s\n","[CV 3/5] END ....C=100, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.4s\n","[CV 4/5] END ....C=100, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.3s\n","[CV 5/5] END ....C=100, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.3s\n","[CV 1/5] END ......C=100, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.6s\n","[CV 2/5] END ......C=100, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.6s\n","[CV 3/5] END ......C=100, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 4/5] END ......C=100, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 5/5] END ......C=100, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.6s\n","[CV 1/5] END ...C=100, gamma=0.1, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 2/5] END ...C=100, gamma=0.1, kernel=linear;, score=1.000 total time=   0.4s\n","[CV 3/5] END ...C=100, gamma=0.1, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 4/5] END ...C=100, gamma=0.1, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 5/5] END ...C=100, gamma=0.1, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 1/5] END .....C=100, gamma=0.1, kernel=poly;, score=1.000 total time=   2.2s\n","[CV 2/5] END .....C=100, gamma=0.1, kernel=poly;, score=1.000 total time=   1.7s\n","[CV 3/5] END .....C=100, gamma=0.1, kernel=poly;, score=1.000 total time=   1.5s\n","[CV 4/5] END .....C=100, gamma=0.1, kernel=poly;, score=1.000 total time=   1.6s\n","[CV 5/5] END .....C=100, gamma=0.1, kernel=poly;, score=1.000 total time=   1.7s\n","[CV 1/5] END ..C=100, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 2/5] END ..C=100, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.7s\n","[CV 3/5] END ..C=100, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.4s\n","[CV 4/5] END ..C=100, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 5/5] END ..C=100, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.4s\n","[CV 1/5] END .....C=100, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 2/5] END .....C=100, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 3/5] END .....C=100, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 4/5] END .....C=100, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 5/5] END .....C=100, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 1/5] END ..C=100, gamma=0.01, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 2/5] END ..C=100, gamma=0.01, kernel=linear;, score=1.000 total time=   0.6s\n","[CV 3/5] END ..C=100, gamma=0.01, kernel=linear;, score=1.000 total time=   0.5s\n","[CV 4/5] END ..C=100, gamma=0.01, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 5/5] END ..C=100, gamma=0.01, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 1/5] END ....C=100, gamma=0.01, kernel=poly;, score=0.503 total time=   2.7s\n","[CV 2/5] END ....C=100, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ....C=100, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END ....C=100, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ....C=100, gamma=0.01, kernel=poly;, score=0.506 total time=   2.0s\n","[CV 1/5] END .C=100, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.3s\n","[CV 2/5] END .C=100, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.3s\n","[CV 3/5] END .C=100, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.3s\n","[CV 4/5] END .C=100, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 5/5] END .C=100, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.3s\n","[CV 1/5] END ....C=100, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 2/5] END ....C=100, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 3/5] END ....C=100, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 4/5] END ....C=100, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 5/5] END ....C=100, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 1/5] END .C=100, gamma=0.001, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 2/5] END .C=100, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END .C=100, gamma=0.001, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 4/5] END .C=100, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END .C=100, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ...C=100, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END ...C=100, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ...C=100, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 4/5] END ...C=100, gamma=0.001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ...C=100, gamma=0.001, kernel=poly;, score=0.506 total time=   1.9s\n","[CV 1/5] END C=100, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 2/5] END C=100, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.6s\n","[CV 3/5] END C=100, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.6s\n","[CV 4/5] END C=100, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.6s\n","[CV 5/5] END C=100, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 1/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=1.000 total time=   1.9s\n","[CV 2/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=1.000 total time=   1.7s\n","[CV 3/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 4/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 5/5] END ...C=100, gamma=0.0001, kernel=rbf;, score=1.000 total time=   1.5s\n","[CV 1/5] END C=100, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END C=100, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END C=100, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END C=100, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END C=100, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ..C=100, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END ..C=100, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 3/5] END ..C=100, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 4/5] END ..C=100, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 5/5] END ..C=100, gamma=0.0001, kernel=poly;, score=0.506 total time=   2.0s\n","[CV 1/5] END C=100, gamma=0.0001, kernel=sigmoid;, score=0.984 total time=   1.8s\n","[CV 2/5] END C=100, gamma=0.0001, kernel=sigmoid;, score=0.966 total time=   1.8s\n","[CV 3/5] END C=100, gamma=0.0001, kernel=sigmoid;, score=0.928 total time=   1.8s\n","[CV 4/5] END C=100, gamma=0.0001, kernel=sigmoid;, score=0.963 total time=   1.8s\n","[CV 5/5] END C=100, gamma=0.0001, kernel=sigmoid;, score=0.941 total time=   2.0s\n","[CV 1/5] END .......C=1000, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 2/5] END .......C=1000, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 3/5] END .......C=1000, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 4/5] END .......C=1000, gamma=1, kernel=rbf;, score=1.000 total time=   0.4s\n","[CV 5/5] END .......C=1000, gamma=1, kernel=rbf;, score=1.000 total time=   0.5s\n","[CV 1/5] END ....C=1000, gamma=1, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 2/5] END ....C=1000, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ....C=1000, gamma=1, kernel=linear;, score=1.000 total time=   0.3s\n","[CV 4/5] END ....C=1000, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ....C=1000, gamma=1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ......C=1000, gamma=1, kernel=poly;, score=1.000 total time=   0.6s\n","[CV 2/5] END ......C=1000, gamma=1, kernel=poly;, score=1.000 total time=   0.6s\n","[CV 3/5] END ......C=1000, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 4/5] END ......C=1000, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 5/5] END ......C=1000, gamma=1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 1/5] END ...C=1000, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 2/5] END ...C=1000, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 3/5] END ...C=1000, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 4/5] END ...C=1000, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 5/5] END ...C=1000, gamma=1, kernel=sigmoid;, score=1.000 total time=   0.1s\n","[CV 1/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 2/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 3/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 4/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 5/5] END .....C=1000, gamma=0.1, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 1/5] END ..C=1000, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END ..C=1000, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END ..C=1000, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END ..C=1000, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END ..C=1000, gamma=0.1, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ....C=1000, gamma=0.1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 2/5] END ....C=1000, gamma=0.1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 3/5] END ....C=1000, gamma=0.1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 4/5] END ....C=1000, gamma=0.1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 5/5] END ....C=1000, gamma=0.1, kernel=poly;, score=1.000 total time=   0.5s\n","[CV 1/5] END .C=1000, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 2/5] END .C=1000, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 3/5] END .C=1000, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 4/5] END .C=1000, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 5/5] END .C=1000, gamma=0.1, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 1/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 2/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 3/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 4/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 5/5] END ....C=1000, gamma=0.01, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 1/5] END .C=1000, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END .C=1000, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END .C=1000, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END .C=1000, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END .C=1000, gamma=0.01, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ...C=1000, gamma=0.01, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 2/5] END ...C=1000, gamma=0.01, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 3/5] END ...C=1000, gamma=0.01, kernel=poly;, score=0.503 total time=   1.9s\n","[CV 4/5] END ...C=1000, gamma=0.01, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 5/5] END ...C=1000, gamma=0.01, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END C=1000, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 2/5] END C=1000, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 3/5] END C=1000, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 4/5] END C=1000, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 5/5] END C=1000, gamma=0.01, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 1/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 2/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 3/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 4/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 5/5] END ...C=1000, gamma=0.001, kernel=rbf;, score=1.000 total time=   0.2s\n","[CV 1/5] END C=1000, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END C=1000, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END C=1000, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END C=1000, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END C=1000, gamma=0.001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END ..C=1000, gamma=0.001, kernel=poly;, score=0.503 total time=   1.9s\n","[CV 2/5] END ..C=1000, gamma=0.001, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 3/5] END ..C=1000, gamma=0.001, kernel=poly;, score=0.503 total time=   2.3s\n","[CV 4/5] END ..C=1000, gamma=0.001, kernel=poly;, score=0.503 total time=   2.4s\n","[CV 5/5] END ..C=1000, gamma=0.001, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END C=1000, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 2/5] END C=1000, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 3/5] END C=1000, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 4/5] END C=1000, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 5/5] END C=1000, gamma=0.001, kernel=sigmoid;, score=1.000 total time=   0.2s\n","[CV 1/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 2/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 3/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 4/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 5/5] END ..C=1000, gamma=0.0001, kernel=rbf;, score=1.000 total time=   0.3s\n","[CV 1/5] END C=1000, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 2/5] END C=1000, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 3/5] END C=1000, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 4/5] END C=1000, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 5/5] END C=1000, gamma=0.0001, kernel=linear;, score=1.000 total time=   0.2s\n","[CV 1/5] END .C=1000, gamma=0.0001, kernel=poly;, score=0.503 total time=   1.8s\n","[CV 2/5] END .C=1000, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.0s\n","[CV 3/5] END .C=1000, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 4/5] END .C=1000, gamma=0.0001, kernel=poly;, score=0.503 total time=   2.2s\n","[CV 5/5] END .C=1000, gamma=0.0001, kernel=poly;, score=0.506 total time=   1.8s\n","[CV 1/5] END C=1000, gamma=0.0001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 2/5] END C=1000, gamma=0.0001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 3/5] END C=1000, gamma=0.0001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 4/5] END C=1000, gamma=0.0001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","[CV 5/5] END C=1000, gamma=0.0001, kernel=sigmoid;, score=1.000 total time=   0.5s\n","Best Model test accuracy: 1.0\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00       194\n","           1       1.00      1.00      1.00       206\n","\n","    accuracy                           1.00       400\n","   macro avg       1.00      1.00      1.00       400\n","weighted avg       1.00      1.00      1.00       400\n","\n","[[194   0]\n"," [  0 206]]\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","#[10]\n","#load testing(unseen/unlabelled) data\n","unseen_test_data_path = '/content/drive/MyDrive/Dissertation-Coding part/datasets/Testing data (unseen:unlabelled).csv'\n","unseen_test_data = pd.read_csv(unseen_test_data_path)\n","\n","#apply text preprocessing function defined before:(clean_text)\n","unseen_test_data['cleaned_text_unseen_test'] = unseen_test_data['Text'].apply(clean_text)\n","\n","#convert to str for tfidf to read\n","unseen_test_data['cleaned_text_unseen_test'] = unseen_test_data['cleaned_text_unseen_test'].astype(str)\n","\n","X_unseen_test_vec = vectorizer_no_sw.transform(unseen_test_data['cleaned_text_unseen_test'])\n","\n","#Best tuned SVM Model for Prediction\n","final_unseen_test_predictions = svc_best_no_sw.predict(X_unseen_test_vec)\n","\n","#generate the predicted label\n","unseen_test_data['Predicted_Label'] = final_unseen_test_predictions\n","print(unseen_test_data[['Text', 'Predicted_Label']].head())\n","\n","unseen_test_data.to_csv('/content/drive/MyDrive/Dissertation-Coding part/datasets/predictions_on_unseen_test_SVM.csv', index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZrbD957fpedX","executionInfo":{"status":"ok","timestamp":1724975761011,"user_tz":-60,"elapsed":8304,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"939cbc03-c739-408d-d54b-0721c14ed2b9"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["                                                Text  Predicted_Label\n","0  \"projects. The main function is the installati...                1\n","1  \"\"* Work in logistics (\"WHISTL\", \"SAINSBURY'S\"...                1\n","2  \"speak English is a plus but not mandatory • M...                1\n","3  \"a refrigerator, TV, kettle. EMERGENCY DEPARTU...                1\n","4  \"in Germany is offered. Shipping and delivery ...                1\n"]}]},{"cell_type":"code","source":["#count labels of the predicted label\n","countlabel= pd.read_csv('/content/drive/MyDrive/Dissertation-Coding part/datasets/predictions_on_unseen_test.csv')\n","\n","#use: value_counts() function\n","#[11]\n","label_counts = countlabel['Predicted_Label'].value_counts()\n","\n","print(label_counts)"],"metadata":{"id":"EyEnQmUzwfwi","executionInfo":{"status":"error","timestamp":1724975761631,"user_tz":-60,"elapsed":625,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"a3547615-7917-4194-fd4e-4deb49d84d13","colab":{"base_uri":"https://localhost:8080/","height":356}},"execution_count":10,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/Dissertation-Coding part/datasets/predictions_on_unseen_test.csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-93ff7b7da746>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#count labels of the predicted label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mcountlabel\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/Dissertation-Coding part/datasets/predictions_on_unseen_test.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m#use: value_counts() function\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#[11]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m    946\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    947\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 948\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    950\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    609\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    610\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 611\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    612\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    613\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1446\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1447\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1448\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1449\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1450\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1703\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1704\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1705\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1706\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1707\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    861\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    862\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 863\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    864\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    865\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/Dissertation-Coding part/datasets/predictions_on_unseen_test.csv'"]}]},{"cell_type":"markdown","source":["#Comparasion:\n","ref: https://datascience.stackexchange.com/questions/69442/plotting-roc-auc-for-svm-algorithm"],"metadata":{"id":"HwWVhH-cP5qR"}},{"cell_type":"code","source":["#[12]\n","model = svc_best_no_sw\n","\n","from sklearn import metrics\n","\n","preds = model.predict(test.V)\n","targs = test.y\n","\n","print(\"accuracy: \", metrics.accuracy_score(targs, preds))\n","print(\"precision: \", metrics.precision_score(targs, preds, average='binary'))  # Specify average='binary' for binary classification\n","print(\"recall: \", metrics.recall_score(targs, preds, average='binary'))  # Specify average='binary' for binary classification\n","print(\"F1: \", metrics.f1_score(targs, preds, average='binary'))  # Specify average='binary' for binary classification\n","print(\"area under curve (auc): \", metrics.roc_auc_score(targs, preds))  # AUC assumes binary classification by default\n","\n","train_preds = preds\n"],"metadata":{"id":"LgY8SgMLEeu2","executionInfo":{"status":"aborted","timestamp":1724975761631,"user_tz":-60,"elapsed":10,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["[13]\n","from sklearn.metrics import roc_curve, roc_auc_score\n","import matplotlib.pyplot as plt\n","\n","false_positive_rate, true_positive_rate, _ = roc_curve(targs, preds)\n","roc_auc = roc_auc_score(targs, preds)\n","\n","# Plot ROC Curve\n","plt.figure(figsize=(10, 10))\n","plt.title('Receiver Operating Characteristic-SVM')\n","plt.plot(false_positive_rate, true_positive_rate, color='red', label=f'AUC = {roc_auc:.2f}')\n","plt.legend(loc='lower right')\n","plt.plot([0, 1], [0, 1], linestyle='--', color='gray')  # Plotting the diagonal line for reference\n","plt.axis('tight')\n","plt.ylabel('True Positive Rate')\n","plt.xlabel('False Positive Rate')\n","plt.show()\n"],"metadata":{"id":"AxLGjLLbFWpU","executionInfo":{"status":"aborted","timestamp":1724975761631,"user_tz":-60,"elapsed":9,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Text real-word data:"],"metadata":{"id":"Sm1C1YU2e8Pt"}},{"cell_type":"code","source":["import pandas as pd\n","#[10]\n","#load testing(unseen/unlabelled) data\n","unseen_test_data_path = '/content/drive/MyDrive/Dissertation-Coding part/datasets/Text2 (unseen).csv'\n","unseen_test_data = pd.read_csv(unseen_test_data_path)\n","\n","#apply text preprocessing function defined before:(clean_text)\n","unseen_test_data['cleaned_text_unseen_test'] = unseen_test_data['Text2'].apply(clean_text)\n","\n","#convert to str for tfidf to read\n","unseen_test_data['cleaned_text_unseen_test'] = unseen_test_data['cleaned_text_unseen_test'].astype(str)\n","\n","X_unseen_test_vec = vectorizer_no_sw.transform(unseen_test_data['cleaned_text_unseen_test'])\n","\n","#Best tuned SVM Model for Prediction\n","final_unseen_test_predictions = svc_best_no_sw.predict(X_unseen_test_vec)\n","\n","#generate the predicted label\n","unseen_test_data['Predicted_Label'] = final_unseen_test_predictions\n","print(unseen_test_data[['Text2', 'Predicted_Label']].head())\n","\n","unseen_test_data.to_csv('/content/drive/MyDrive/Dissertation-Coding part/datasets/predictions_on_unseen_tes2t_SVM.csv', index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o9gzXIwQT57D","executionInfo":{"status":"ok","timestamp":1724975926496,"user_tz":-60,"elapsed":1006,"user":{"displayName":"Jennifer Huang","userId":"01972070353211708028"}},"outputId":"ef07947f-3821-459c-e463-eae55dab9ecd"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["                                               Text2  Predicted_Label\n","0  Nature of work\\nWorkers wanted in Dutch wareho...                1\n","1  Nature of work\\nWorking hours: three shifts: m...                1\n","2  Nature of work\\nWe are looking for workers for...                1\n","3  Nature of work\\nWe are looking for workers for...                1\n","4  Nature of work\\nWe offer a job in Holland, in ...                1\n"]}]},{"cell_type":"markdown","source":["Reference:\n","1.  https://stackoverflow.com/questions/37101114/what-to-download-in-order-to-make-nltk-tokenize-word-tokenize-work\n","2. https://docs.python.org/3/library/unicodedata.html\n","3. https://towardsdatascience.com/difference-between-nfd-nfc-nfkd-and-nfkc-explained-with-python-code-e2631f96ae6c\n","4. https://stackabuse.com/understanding-svm-hyperparameters/\n","5. https://www.geeksforgeeks.org/\n","6. https://www.kaggle.com/code/prashant111/svm-classifier-tutorial\n","7.https://aqsa-qadir44.medium.com/tuning-parameters-of-svm-kernel-regularization-gamma-and-margin-5f2f6639121a\n"," ref: https://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html\n","\n","8. https://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html\n","\n","9. \thttps://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html\n","10. https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html\n","\n","11. https://www.w3resource.com/pandas/series/series-value_counts.php\n","12. https://datascience.stackexchange.com/questions/69442/plotting-roc-auc-for-svm-algorithm\n","13.  https://www.kaggle.com/code/nirajvermafcb/comparing-various-ml-models-roc-curve-comparison\n","\n"],"metadata":{"id":"ZWF1d2SAjEk9"}}]}